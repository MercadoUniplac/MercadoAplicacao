@model Uniplac.Mercado.Apresentacao.Webforms.Models.VendaModel
@{
    ViewBag.Title = "Cadastro de Vendas";
}

<h2>Cadastro de Vendas</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h5>Preencha os dados abaixo para cadastar a venda.</h5>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <section class="form-group venda-create__data col-xs-12">
            @Html.LabelFor(model => model.Venda.Data, htmlAttributes: new { @class = "control-label col-sm-1" })
            <div class="col-sm-11">
                @Html.EditorFor(model => model.Venda.Data, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Venda.Data, "", new { @class = "text-danger" })
            </div>
        </section>
        <section class="form-group  venda-create__itens-venda col-xs-12">
            <label class="control-label col-sm-1"> Itens da Venda</label>
            <div class="col-sm-11">
                <input type='submit' class="btn btn-default pull-right" value='Adicionar Item de Venda' formaction='@Url.Action("ModifyItemVendaModel")' />
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>
                                Produto
                            </th>
                            <th>
                                Valor Unitário
                            </th>
                            <th>
                                Qtd
                            </th>
                            <th>
                                Subtotal
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (var i = 0; i < Model.Venda.Itens.Count; i++)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(model => Model.Venda.Itens[i].Produto.Nome)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => Model.Venda.Itens[i].Produto.Preco)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => Model.Venda.Itens[i].Qtd)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => Model.TotalItemVenda[i])
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </section>
        <section class="form-group">
            @Html.HiddenFor(x => Model.NumItemVenda);
            @for (int i = 0; i < Model.NumItemVenda; i++)
            {
                @Html.HiddenFor(x => Model.Qtds[i].Value)
                @Html.HiddenFor(x => Model.Produtos[i].Value)

            }
        </section>
        <section class="form-group">
            <label class="control-label  col-sm-1"> Total da Venda</label>
            <h1 class="text-info">
                R$ @Html.DisplayFor(modelItem => Model.TotalVenda)
            </h1>
        </section>
        <div class="form-group">
            <div class="col-md-offset-1 col-md-11">
                <input type='submit' class="btn btn-success" value='Create' formaction='@Url.Action("Create")' />
            </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    window.onbeforeunload = onClose;
    function onClose() {
        $.ajax({
            url: "/onclose",
            async: false
        });
    }
</script>